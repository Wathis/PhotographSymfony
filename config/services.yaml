# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    photos_watermarked_directory: '%kernel.project_dir%/public/upload/watermarked'
    photos_directory: '%kernel.project_dir%/public/uploads/photos'
    presse_directory: '%kernel.project_dir%/public/uploads/presse'
    carousel_directory: '%kernel.project_dir%/public/uploads/carousel'
    img_directory: '%kernel.project_dir%/public/img'
    watermarked_photos_directory: '%kernel.project_dir%/public/uploads/watermarked'
    paypal_secret: EA8MAAZbD-QAsWaFOApZLemvRp22ic0TBq-NM4x6tvzsTg3_umSBTv0XTOXJU23qWdGFjxcUCukie2CI
    paypal_api_key: AT4qJsVSJ5ZcRz3eXvtKBlAAgn9_ZJTbay0B4KUPC8eyAVka7SIb0ueYMuiBYGK7JYpR9WK-nXC9N6vB
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
